image: php:7.4

before_script:
  - apt-get update -y
  - apt-get install zip unzip libzip-dev git gettext-base python3-pip -y
  - docker-php-ext-install zip
  - pip3 install awsebcli --upgrade --user
  - ELASTIC_BEANSTALK_ENVIRONMENT_NAME=$(echo $CI_COMMIT_REF_NAME| cut -b 1-8)
  - STRLENGTH=`echo -n $ELASTIC_BEANSTALK_ENVIRONMENT_NAME | wc -m`
  - if [[ $STRLENGTH < 4 ]]; then ELASTIC_BEANSTALK_ENVIRONMENT_NAME=$(echo "sample-application-${ELASTIC_BEANSTALK_ENVIRONMENT_NAME}"); fi
  - envsubst < .env.example > .env
  - mkdir ~/.aws/ && touch ~/.aws/config
  - printf "[profile eb-cli]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
  - curl -O https://bootstrap.pypa.io/get-pip.py
  - python3 get-pip.py --user
  - export PATH=~/.local/bin:$PATH
  - source ~/.profile
  - EXISTING_ENVIRONMENTS=$(eb list)

stages:
  - createOrUpdateEnv
  - terminateEnv

job_createOrUpdateEnv:
  stage: createOrUpdateEnv
  script:
    - if [[ $EXISTING_ENVIRONMENTS == *"$ELASTIC_BEANSTALK_ENVIRONMENT_NAME"* ]]; then eb use $ELASTIC_BEANSTALK_ENVIRONMENT_NAME; else eb create $ELASTIC_BEANSTALK_ENVIRONMENT_NAME --single --instance_type t2.micro; fi
    - sleep 50
    - eb deploy
    - echo "https://$ELASTIC_BEANSTALK_ENVIRONMENT_NAME.eba-nh2qkppi.eu-central-1.elasticbeanstalk.com"

job_terminateEnv:
  stage: terminateEnv
  script:
    - if [[ $EXISTING_ENVIRONMENTS == *"$ELASTIC_BEANSTALK_ENVIRONMENT_NAME"* ]]; then eb terminate $ELASTIC_BEANSTALK_ENVIRONMENT_NAME --force; else echo "Environment not found!"; fi
  when: manual
